import telebot
import config
 
from telebot import types
 
bot = telebot.TeleBot(config.TOKEN)
 
@bot.message_handler(commands=['start'])
def welcome(message):
 
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–î–Ω–∏ –±–µ–∑ —Å—Å–æ—Ä üìÖ")
    item2 = types.KeyboardButton("–ú–∏–ª—ã–µ —Å–ø–∏—Å–æ—á–∫–∏ üíó")
 
    markup.add(item1, item2)
 
    
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã—Ç—å –º–∏–ª–∞—à–∫–æ–πüòò".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
 
@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == "–ú–∏–ª—ã–µ —Å–ø–∏—Å–æ—á–∫–∏ üíó":
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–ù–∞—Å—Ç—èüê∞", callback_data='Anastasia')
            item2 = types.InlineKeyboardButton("–ö–∞—Ä–∏–º", callback_data='Karim')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–ß–µ–π —Å–ø–∏—Å–æ–∫ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', reply_markup=markup)

        elif message.text == "–î–Ω–∏ –±–µ–∑ —Å—Å–æ—Ä üìÖ":
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–£–≥—É(", callback_data='bad')
            item2 = types.InlineKeyboardButton("üëâüèªüëàüèª", callback_data='soso')
            item3 = types.InlineKeyboardButton("–ù–µ-–∞!", callback_data='good')

            markup.add(item1, item2, item3)

            bot.send_message(message.chat.id, '–ü–æ—Å—Å–æ—Ä–∏–ª–∏—Å—å?', reply_markup=markup)

        else:
            if message.from_user.username == 'karim_muzafarov':
                config.Anastasia_list.append(message.text)
                bot.reply_to(message, "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø—Ä—å —ç—Ç–æ –≤ —Å–ø–∏—Å–∫–µ –º–∏–ª–æ—Å—Ç–µ–π –ù–∞—Å—Ç–∏ üòä")
            elif message.from_user.username == 'They_ask_me':
                config.Karim_list.append(message.text)
                bot.reply_to(message, "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø—Ä—å —ç—Ç–æ –≤ —Å–ø–∏—Å–∫–µ –º–∏–ª–æ—Å—Ç–µ–π –ö–∞—Ä–∏–º–∞ üòä")
            else:
                bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')
 
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
                config.days_without += 1
                bot.send_message(call.message.chat.id, config.days_without)
            elif call.data == 'soso':
                bot.send_message(call.message.chat.id, '–ù—É –∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–µ–Ω—å–∫–æ...')
                bot.send_message(call.message.chat.id, config.days_without)
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
                config.days_without = 0
                bot.send_message(call.message.chat.id, config.days_without)
            elif call.data == 'Anastasia':
                bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ—á–µ–∫ –ù–∞—Å—Ç–∏ü•∞")
                for i in config.Anastasia_list:
                    bot.send_message(call.message.chat.id, i)
            elif call.data == 'Karim':
                bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ—á–µ–∫ –ö–∞—Ä–∏–º–∞ü•∞")
                for i in config.Karim_list:
                    bot.send_message(call.message.chat.id, i)
                
 
    except Exception as e:
        print(repr(e))
 
# RUN
bot.polling(none_stop=True)